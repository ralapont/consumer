/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.example.demo.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ClienteAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8719157527444476151L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ClienteAvro\",\"namespace\":\"com.example.demo.avro\",\"fields\":[{\"name\":\"Cliente\",\"type\":{\"type\":\"record\",\"name\":\"Cliente\",\"fields\":[{\"name\":\"nombre\",\"type\":\"string\"},{\"name\":\"apellido\",\"type\":\"string\"},{\"name\":\"nif\",\"type\":\"string\"},{\"name\":\"telefono\",\"type\":\"string\"},{\"name\":\"Direccion\",\"type\":{\"type\":\"record\",\"name\":\"Direccion\",\"fields\":[{\"name\":\"tipoVia\",\"type\":\"string\"},{\"name\":\"nombre\",\"type\":\"string\"},{\"name\":\"numero\",\"type\":\"string\"},{\"name\":\"piso\",\"type\":\"string\"},{\"name\":\"codigoPostal\",\"type\":\"string\"},{\"name\":\"poblacion\",\"type\":\"string\"},{\"name\":\"provincia\",\"type\":\"string\"}]}},{\"name\":\"edad\",\"type\":\"long\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ClienteAvro> ENCODER =
      new BinaryMessageEncoder<ClienteAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ClienteAvro> DECODER =
      new BinaryMessageDecoder<ClienteAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ClienteAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ClienteAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ClienteAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ClienteAvro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ClienteAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ClienteAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ClienteAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ClienteAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private com.example.demo.avro.Cliente Cliente;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ClienteAvro() {}

  /**
   * All-args constructor.
   * @param Cliente The new value for Cliente
   */
  public ClienteAvro(com.example.demo.avro.Cliente Cliente) {
    this.Cliente = Cliente;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return Cliente;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: Cliente = (com.example.demo.avro.Cliente)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'Cliente' field.
   * @return The value of the 'Cliente' field.
   */
  public com.example.demo.avro.Cliente getCliente() {
    return Cliente;
  }


  /**
   * Sets the value of the 'Cliente' field.
   * @param value the value to set.
   */
  public void setCliente(com.example.demo.avro.Cliente value) {
    this.Cliente = value;
  }

  /**
   * Creates a new ClienteAvro RecordBuilder.
   * @return A new ClienteAvro RecordBuilder
   */
  public static com.example.demo.avro.ClienteAvro.Builder newBuilder() {
    return new com.example.demo.avro.ClienteAvro.Builder();
  }

  /**
   * Creates a new ClienteAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ClienteAvro RecordBuilder
   */
  public static com.example.demo.avro.ClienteAvro.Builder newBuilder(com.example.demo.avro.ClienteAvro.Builder other) {
    if (other == null) {
      return new com.example.demo.avro.ClienteAvro.Builder();
    } else {
      return new com.example.demo.avro.ClienteAvro.Builder(other);
    }
  }

  /**
   * Creates a new ClienteAvro RecordBuilder by copying an existing ClienteAvro instance.
   * @param other The existing instance to copy.
   * @return A new ClienteAvro RecordBuilder
   */
  public static com.example.demo.avro.ClienteAvro.Builder newBuilder(com.example.demo.avro.ClienteAvro other) {
    if (other == null) {
      return new com.example.demo.avro.ClienteAvro.Builder();
    } else {
      return new com.example.demo.avro.ClienteAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for ClienteAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ClienteAvro>
    implements org.apache.avro.data.RecordBuilder<ClienteAvro> {

    private com.example.demo.avro.Cliente Cliente;
    private com.example.demo.avro.Cliente.Builder ClienteBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.example.demo.avro.ClienteAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.Cliente)) {
        this.Cliente = data().deepCopy(fields()[0].schema(), other.Cliente);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasClienteBuilder()) {
        this.ClienteBuilder = com.example.demo.avro.Cliente.newBuilder(other.getClienteBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing ClienteAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.example.demo.avro.ClienteAvro other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.Cliente)) {
        this.Cliente = data().deepCopy(fields()[0].schema(), other.Cliente);
        fieldSetFlags()[0] = true;
      }
      this.ClienteBuilder = null;
    }

    /**
      * Gets the value of the 'Cliente' field.
      * @return The value.
      */
    public com.example.demo.avro.Cliente getCliente() {
      return Cliente;
    }


    /**
      * Sets the value of the 'Cliente' field.
      * @param value The value of 'Cliente'.
      * @return This builder.
      */
    public com.example.demo.avro.ClienteAvro.Builder setCliente(com.example.demo.avro.Cliente value) {
      validate(fields()[0], value);
      this.ClienteBuilder = null;
      this.Cliente = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'Cliente' field has been set.
      * @return True if the 'Cliente' field has been set, false otherwise.
      */
    public boolean hasCliente() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'Cliente' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.example.demo.avro.Cliente.Builder getClienteBuilder() {
      if (ClienteBuilder == null) {
        if (hasCliente()) {
          setClienteBuilder(com.example.demo.avro.Cliente.newBuilder(Cliente));
        } else {
          setClienteBuilder(com.example.demo.avro.Cliente.newBuilder());
        }
      }
      return ClienteBuilder;
    }

    /**
     * Sets the Builder instance for the 'Cliente' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.example.demo.avro.ClienteAvro.Builder setClienteBuilder(com.example.demo.avro.Cliente.Builder value) {
      clearCliente();
      ClienteBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'Cliente' field has an active Builder instance
     * @return True if the 'Cliente' field has an active Builder instance
     */
    public boolean hasClienteBuilder() {
      return ClienteBuilder != null;
    }

    /**
      * Clears the value of the 'Cliente' field.
      * @return This builder.
      */
    public com.example.demo.avro.ClienteAvro.Builder clearCliente() {
      Cliente = null;
      ClienteBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ClienteAvro build() {
      try {
        ClienteAvro record = new ClienteAvro();
        if (ClienteBuilder != null) {
          try {
            record.Cliente = this.ClienteBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("Cliente"));
            throw e;
          }
        } else {
          record.Cliente = fieldSetFlags()[0] ? this.Cliente : (com.example.demo.avro.Cliente) defaultValue(fields()[0]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ClienteAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<ClienteAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ClienteAvro>
    READER$ = (org.apache.avro.io.DatumReader<ClienteAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    this.Cliente.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (this.Cliente == null) {
        this.Cliente = new com.example.demo.avro.Cliente();
      }
      this.Cliente.customDecode(in);

    } else {
      for (int i = 0; i < 1; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (this.Cliente == null) {
            this.Cliente = new com.example.demo.avro.Cliente();
          }
          this.Cliente.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










